# This is a basic workflow to help you get started with Actions

name: Publish releases

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      
jobs:
  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.401'
      # Runs a single command using the runners shell
      - name: Publish osx-x64
        run: dotnet publish -c release -r osx-x64 -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true
      - name: zip osx-x64
        run: zip --junk-paths Badger-osx-x64.zip /home/runner/work/Badger/Badger/bin/release/netcoreapp3.1/osx-x64/publish/Badger
      - name: Publish win-x64
        run: dotnet publish -c release -r win-x64 -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true
      - name: zip win-x64
        run: zip --junk-paths Badger-win-x64.zip /home/runner/work/Badger/Badger/bin/release/netcoreapp3.1/win-x64/publish/Badger.exe
      - name: Publish linux-x64
        run: dotnet publish -c release -r linux-x64 -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true
      - name: zip linux-x64
        run: zip --junk-paths Badger-linux-x64.zip /home/runner/work/Badger/Badger/bin/release/netcoreapp3.1/linux-x64/publish/Badger
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload osx-x64 assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/Badger/Badger/bin/release/netcoreapp3.1/osx-x64/publish/Badger-osx-x64.zip
          asset_name: Badger-osx-x64.zip
          asset_content_type: application/zip
      - name: Upload win-x64 assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/Badger/Badger/bin/release/netcoreapp3.1/win-x64/publish/Badger-win-x64.zip
          asset_name: Badger-win-x64.zip
          asset_content_type: application/zip  
      - name: Upload linux-x64 assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/Badger/Badger/bin/release/netcoreapp3.1/linux-x64/publish/Badger-linux-x64.zip
          asset_name: Badger-linux-x64.zip
          asset_content_type: application/zip  
